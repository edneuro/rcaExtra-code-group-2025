function [ChartFs,OptFs,ChartL,OptL] = mrC_InitPivotFieldStructs


% { fieldName, Sel, Items, pageVector; ...
ChartInit = { ...
	'Cnds',     [], {}, false; ...
	'Hems',     mrC_DefaultChartVals( 'Hems', false ),     mrC_DefaultChartVals( 'Hems', true ),     false; ...
	'ROIs',     [], {}, false; ...
	'ROItypes', mrC_DefaultChartVals( 'ROItypes', false ), mrC_DefaultChartVals( 'ROItypes', true ), false; ...
	'Sbjs',     [], {}, true; ...
	'Flts',     [], {}, false; ...
	'Comps',    [], {}, false; ...
	'Invs',     [], {}, false; ...
	'Mtgs',     [], {}, false; ...
	'Chans',    [], {}, true; ...
	};

% { fieldName, Max, Sel, Items; ...
OptInit = { ...
	'Space',       1, 1, { 'Source' 'Sensor' 'Topo' }; ...
	'Domain',      1, 1, { 'Wave' 'Spec' 'SpecPhase' '2DPhase' 'Bar' 'BarTriplet' }; ...
% 	'Stats',       2, 1, { 'Mean' 'Dispersion' 'Scatter' 'SbjNames' 'Significance' }; ...
	'Stats',       2, 1, { 'Mean' 'Dispersion' 'Scatter' }; ...
	'Colors',      2, 1:8, mrC_DefaultColorOrderNames; ...
	'Cortex',      1, 1, { 'none' }; ...
	'ScaleBy',     1, 1, { 'All' 'Rows' 'Cols' 'Panels' 'Reuse' }; ...
	'SpecPlotCmp', 1, 1, { 'UpDown' 'Overlay' }; ...
	'Patches',     1, 1, { 'on' 'off' }; ...
	'WaveSpacing', 1, 1, { '5' '10' '1' '2.5' 'UsrDef: ' }; ...
	'SpecSpacing', 1, 1, { '.5' '1' '2.5' '5' 'UsrDef: ' }; ...
	'SpecXLim',    1, 1, { '20' '10' '50' 'Max' 'UsrDef: ' }; ...
	'ColorCutoff', 1, 1, { '0' '1' '2' '5' '10' '20' '50' '100' 'UsrDef: ' }; ...
	'AutoPaint',   1, 1, { 'on' 'off' }; ...
	'ColorMapMax', 1, 1, { 'All' 'Cursor' 'UsrDef: ' }; ...
	'BarMean',     1, 1, { 'Coherent' 'Incoherent' }; ...
% 	'AmpType',     1, 1, { 'projected' 'scalar' }; ...
% 	'SignifTest',  1, 1, { 'Bonferroni' 'PermTVals' 'PermTRuns' }; ...
% 	'SignifCrit',  1, 1, { 'Omnibus' 'Chan/ROI' }; ...
% 	'SignifMarkers', 1, 1, { 'OnWaves' 'OnAxis' }; ...
% 	'GhostTest',   1, 1, { 'off' 'on' }; ...
	'DisperScale', 1, 1, { 'SEM' '95%CI' }; ...
	'SensorWaves', 1, 2, { 'butterfly', 'average', 'GFP' }; ...
	'TopoMap',     1, 1, { 'elp-File', 'Standard', 'Sphere' }; ...
	'XLBookName',  1, 1, { 'mrCurrentData.xlw' 'UsrDef: ' }; ...
	'XLSheetName', 1, 1, { 'mrCurrentData' 'UsrDef: ' }; ...
	};

[ChartFs,OptFs] = deal(struct);		% 1x1 structure w/ no fields

for i = 1:size( ChartInit, 1 )
	ChartFs.( ChartInit{i,1} ) = struct( 'Dim', '', 'Sel', ChartInit{i,2}, 'Items', ChartInit(i,3), 'pageVector', ChartInit{i,4} );
% 	ChartFs.( ChartInit{ i, 1 } ).Dim        = '';
% 	ChartFs.( ChartInit{ i, 1 } ).Sel        = ChartInit{ i, 2 };
% 	ChartFs.( ChartInit{ i, 1 } ).Items      = ChartInit{ i, 3 };
% 	ChartFs.( ChartInit{ i, 1 } ).pageVector = ChartInit{ i, 4 };
end

for i = 1:size( OptInit, 1 )
	OptFs.( OptInit{i,1} ) = struct( 'Max', OptInit{i,2}, 'Sel', OptInit{i,3}, 'Items', OptInit(i,4) );
end

ChartL = struct( 'Items', { fieldnames( ChartFs ) }, 'Sel', 1 );
OptL   = struct( 'Items', { fieldnames(   OptFs ) }, 'Sel', 1 );



